<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scala on Mildly Skilled</title>
    <link>/tags/scala/</link>
    <description>Recent content in Scala on Mildly Skilled</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 30 Jun 2015 14:15:42 +0100</lastBuildDate>
    
	<atom:link href="/tags/scala/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Content as a Service with a Micro Framework</title>
      <link>/posts/caas-with-micro-framework/</link>
      <pubDate>Tue, 30 Jun 2015 14:15:42 +0100</pubDate>
      
      <guid>/posts/caas-with-micro-framework/</guid>
      <description>I had an idea of building a content management system with one of the Scala frameworks a while back and I decided on the Play Framework. In the middle of scoping things out in terms of my requirements, I decided that perhaps I did not want to build &amp;ldquo;yet another CMS.&amp;rdquo; My initial idea was to build something like wordpress using Play, but the more I thought about it the more I questioned what exactly I wanted to achieve.</description>
    </item>
    
    <item>
      <title>A standalone java/jar application from Scala sources using Proguard - Part 1</title>
      <link>/posts/2012-02-12-building-a-standalone-javajar-application-from-scala-sources-using-proguard/</link>
      <pubDate>Sun, 12 Feb 2012 14:15:42 +0100</pubDate>
      
      <guid>/posts/2012-02-12-building-a-standalone-javajar-application-from-scala-sources-using-proguard/</guid>
      <description>After about an hour of digging around and looking for a way to package a simulation I wrote in Scala for a coleague, I came across this process of doing it. I have reduced it down to a bash script which will be at the bottom of this post but I thought I should go through the steps a bit as the script makes certain assumptions.
The first assumption is that you have the necessary libraries and such to run it they are as follows:</description>
    </item>
    
    <item>
      <title>MySQL and Scala - Simple selects</title>
      <link>/posts/2011-07-29-mysql-and-scala-simple-selects/</link>
      <pubDate>Fri, 29 Jul 2011 14:15:42 +0100</pubDate>
      
      <guid>/posts/2011-07-29-mysql-and-scala-simple-selects/</guid>
      <description>So after about an hour of research and experimenting, I found out how to make Scala work with MySQL without too much hassle, I found a really helpful guide here. Going down the SBT route, I first created a project and all that, then inside of the build folder I created a Scala class that ensured that when I started building, I would have the right dependencies downloaded and ready.</description>
    </item>
    
  </channel>
</rss>